package {{packageName}};


import com.whatswater.curd.project.common.CrudUtils;
import com.whatswater.curd.project.common.Page;
import com.whatswater.curd.project.common.PageResult;
import io.vertx.core.Future;
import io.vertx.core.json.JsonObject;
import io.vertx.ext.sql.assist.SQLExecute;
import io.vertx.ext.sql.assist.SqlAssist;
import io.vertx.mysqlclient.MySQLClient;
import io.vertx.mysqlclient.MySQLPool;

import java.util.stream.Collectors;

public class {{entityName}}Service {
    private final {{entityName}}SQL {{captureEntityName}}SQL;

    public {{entityName}}Service(MySQLPool pool) {
        this.{{captureEntityName}}SQL = new {{entityName}}SQL(SQLExecute.createMySQL(pool));
    }

    public Future<PageResult<{{entityName}}>> search(Page page, {{entityName}}Query query) {
        SqlAssist sqlAssist = query.toSqlAssist();
        sqlAssist.setStartRow(page.getOffset());
        sqlAssist.setRowSize(page.getLimit());

        return {{captureEntityName}}SQL.getCount(sqlAssist).compose(total -> {
            if (CrudUtils.notZero(total)) {
                return {{captureEntityName}}SQL.selectAll(sqlAssist).map(list -> PageResult.of(list.stream().map({{entityName}}::new).collect(Collectors.toList()), page, total));
            } else {
                return Future.succeededFuture(PageResult.empty());
            }
        });
    }

    public Future<{{entityName}}> getById(Long {{captureEntityName}}Id) {
        Future<JsonObject> result = {{captureEntityName}}SQL.selectById({{captureEntityName}}Id);
        return result.map(json -> {
            if (json == null) {
                return null;
            }
            return new {{entityName}}(json);
        });
    }

    public Future<Long> insert({{entityName}} {{captureEntityName}}) {
        return {{captureEntityName}}SQL.insertNonEmptyGeneratedKeys({{captureEntityName}}, MySQLClient.LAST_INSERTED_ID);
    }

    public Future<Integer> update({{entityName}} {{captureEntityName}}) {
        return {{captureEntityName}}SQL.updateNonEmptyById({{captureEntityName}});
    }
}
